// src-backend/index.ts
import path from "path";
import express from "express";
import { auth, JWT } from "@colyseus/auth";
import { matchMaker } from "@colyseus/core";
import { allRoomNames, applyMonkeyPatch } from "./colyseus.ext.mjs";
import { fileURLToPath } from "url";
function playground() {
  applyMonkeyPatch();
  const router = express.Router();
  router.use("/", express.static(path.resolve(path.dirname(fileURLToPath(import.meta.url)), "..", "build")));
  router.get("/rooms", async (req, res) => {
    const rooms = await matchMaker.driver.query({});
    const roomsByType = {};
    const roomsById = {};
    rooms.forEach((room) => {
      if (!roomsByType[room.name]) {
        roomsByType[room.name] = 0;
      }
      roomsByType[room.name]++;
      roomsById[room.roomId] = room;
    });
    res.json({
      rooms: allRoomNames,
      roomsByType,
      roomsById,
      auth: {
        // list of OAuth providers
        oauth: Object.keys(auth.oauth.providers),
        register: typeof auth.settings.onRegisterWithEmailAndPassword === "function",
        anonymous: typeof JWT.settings.secret === "string"
      }
    });
  });
  return router;
}
export {
  playground
};
