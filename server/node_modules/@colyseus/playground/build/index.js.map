{
  "version": 3,
  "sources": ["../src-backend/index.ts"],
  "sourcesContent": ["import path from 'path';\nimport express, { Router } from 'express';\nimport { auth, JWT } from '@colyseus/auth';\nimport { matchMaker, IRoomCache } from '@colyseus/core';\nimport { allRoomNames, applyMonkeyPatch } from './colyseus.ext.js';\nimport { fileURLToPath } from 'url'; // required for ESM build (see build.mjs)\n\nexport type AuthConfig = {\n  oauth: string[],\n  register: boolean,\n  anonymous: boolean,\n};\n\nexport function playground(): Router {\n  applyMonkeyPatch();\n\n  const router = express.Router();\n\n  // serve static frontend\n  router.use(\"/\", express.static(path.resolve(__dirname, \"..\", \"build\")));\n\n  // expose matchmaking stats\n  router.get(\"/rooms\", async (req, res) => {\n    const rooms = await matchMaker.driver.query({});\n\n    const roomsByType: { [roomName: string]: number } = {};\n    const roomsById: { [roomName: string]: IRoomCache } = {};\n\n    rooms.forEach((room) => {\n      if (!roomsByType[room.name]) { roomsByType[room.name] = 0; }\n      roomsByType[room.name]++;\n      roomsById[room.roomId] = room;\n    });\n\n    res.json({\n      rooms: allRoomNames,\n\n      roomsByType,\n      roomsById,\n\n      auth: {\n        // list of OAuth providers\n        oauth: Object.keys(auth.oauth.providers),\n        register: typeof(auth.settings.onRegisterWithEmailAndPassword) === \"function\",\n        anonymous: typeof(JWT.settings.secret) === \"string\",\n      } as AuthConfig\n    });\n  });\n\n  return router;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAiB;AACjB,qBAAgC;AAChC,kBAA0B;AAC1B,kBAAuC;AACvC,0BAA+C;AASxC,SAAS,aAAqB;AACnC,4CAAiB;AAEjB,QAAM,SAAS,eAAAA,QAAQ,OAAO;AAG9B,SAAO,IAAI,KAAK,eAAAA,QAAQ,OAAO,YAAAC,QAAK,QAAQ,WAAW,MAAM,OAAO,CAAC,CAAC;AAGtE,SAAO,IAAI,UAAU,OAAO,KAAK,QAAQ;AACvC,UAAM,QAAQ,MAAM,uBAAW,OAAO,MAAM,CAAC,CAAC;AAE9C,UAAM,cAA8C,CAAC;AACrD,UAAM,YAAgD,CAAC;AAEvD,UAAM,QAAQ,CAAC,SAAS;AACtB,UAAI,CAAC,YAAY,KAAK,IAAI,GAAG;AAAE,oBAAY,KAAK,IAAI,IAAI;AAAA,MAAG;AAC3D,kBAAY,KAAK,IAAI;AACrB,gBAAU,KAAK,MAAM,IAAI;AAAA,IAC3B,CAAC;AAED,QAAI,KAAK;AAAA,MACP,OAAO;AAAA,MAEP;AAAA,MACA;AAAA,MAEA,MAAM;AAAA;AAAA,QAEJ,OAAO,OAAO,KAAK,iBAAK,MAAM,SAAS;AAAA,QACvC,UAAU,OAAO,iBAAK,SAAS,mCAAoC;AAAA,QACnE,WAAW,OAAO,gBAAI,SAAS,WAAY;AAAA,MAC7C;AAAA,IACF,CAAC;AAAA,EACH,CAAC;AAED,SAAO;AACT;",
  "names": ["express", "path"]
}
